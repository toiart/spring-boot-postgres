buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')

	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

jar {
	baseName = 'spring-boot-postgres'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-mobile')
	compile('org.postgresql:postgresql:9.3-1104-jdbc4')
	compile('io.jsonwebtoken:jjwt:0.7.0')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test:4.0.1.RELEASE')
	testCompile("com.jayway.restassured:rest-assured:2.9.0")
	testCompile('com.h2database:h2')
}

task unitTest( type: Test ) {
	exclude 'com/example/integration/**'
}

task integrationTest(type: Test) {
	include 'com/example/integration/**'
}

task buildDocker(type: Docker, dependsOn: build) {      // this task will build our Docker image
	push = false
	applicationName = jar.baseName
	dockerfile = file('src/main/docker/Dockerfile')
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}

task generateVersionFile {
    ext {
        versionfile = file("${buildDir}/resources/main/version.json")
        versionfile.text = "{ \"version\": \"${jar.version}\" }"
    }
}

compileJava.dependsOn generateVersionFile